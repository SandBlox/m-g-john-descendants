{"version":3,"sources":["components/Switch/index.js","components/MixedNodeElement.js","components/PureSvgNodeElement.js","utils/TreeConverter.js","components/Editor.js","components/FamilyTree.js","components/Viewer.js","App.js","index.js"],"names":["Input","this","props","variable","name","onChange","checked","className","type","id","htmlFor","Component","MixedNodeElement","nodeData","triggerNodeToggle","foreignObjectProps","Fragment","r","style","display","flexDirection","alignItems","border","paddingBottom","backgroundColor","listStyleType","padding","attributes","Object","keys","map","labelKey","i","key","children","textAlign","onClick","__rd3t","collapsed","textLayout","vertical","title","textAnchor","x","attribute","dy","horizontal","y","PureSvgNodeElement","nodeDatum","orientation","toggleNode","onNodeClick","entries","labelValue","bfs","idRegex","parentIdRegex","extract","ancestryEntry","entryData","Error","val","parseAncestryEntry","trim","length","lines","split","line","forEach","def","join","match","matches","parentId","data","parseAncestryNotation","text","nodeMap","replace","filter","entry","tree","values","push","printAncestryEntry","node","attr","frontier","shift","child","childI","orgChartJson","customNodeFnMapping","svg","description","fn","rd3tProps","appState","mixed","width","nodeSize","height","countNodes","count","n","reduce","sum","getEditDataFileLink","window","location","href","owner","projectPath","Editor","handleCustomNodeFnChange","evt","customNodeKey","target","value","setState","renderCustomNodeElement","toggleCollapseNeighborNodes","prevState","shouldCollapseNeighborNodes","generateConfigs","state","translate","translateX","translateY","pathFunc","collapsible","initialDepth","zoomable","zoom","scaleExtent","separation","enableLegacyTransitions","transitionDuration","depthFactor","styles","generateDataAndConfigurations","configurations","proposedAncestry","totalNodeCount","Array","isArray","min","max","siblings","nonSiblings","nodes","circle","fill","stroke","leafNode","setTitle","bind","setOrientation","setPathFunc","handleChange","handleFloatChange","toggleCollapsible","toggleZoomable","setScaleExtent","setSeparation","setNodeSize","parsedIntValue","parseInt","undefined","isNaN","parsedFloatValue","parseFloat","dimensions","treeContainer","getBoundingClientRect","notation","ancestryParsingError","e","message","version","rel","JSON","stringify","disabled","navigator","clipboard","writeText","marginBottom","color","rows","event","tryUpdateAncestry","Switch","defaultValue","ref","tc","rootNodeClassName","branchNodeClassName","console","log","args","onNodeMouseOver","onNodeMouseOut","onLinkClick","onLinkMouseOver","onLinkMouseOut","configs","FamilyTree","Viewer","App","editMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbd7e461.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react';\nimport './styles.css';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    checked: PropTypes.bool.isRequired,\n    variable: PropTypes.object\n  };\n\n  render() {\n    const { variable, name, onChange, checked } = this.props;\n    return (\n      <div className='onoffswitch'>\n        <input type='checkbox' className='onoffswitch-checkbox' id={name} name={name}\n          onChange={onChange} checked={checked} {...variable} />\n        <label className='onoffswitch-label' htmlFor={name}>\n          <span className='onoffswitch-inner' />\n          <span className='onoffswitch-switch' />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Input;","import React from 'react';\n\nconst MixedNodeElement = ({ nodeData = {}, triggerNodeToggle, foreignObjectProps = {} }) => {\n  return (\n    <React.Fragment>\n      <circle r={20}></circle>\n      <foreignObject {...foreignObjectProps}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            border: '1px solid black',\n            paddingBottom: '1rem',\n            backgroundColor: 'rgb(248, 248, 255)', // ghostwhite\n          }}\n        >\n          <h3>{nodeData.name}</h3>\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\n            {nodeData.attributes &&\n              Object.keys(nodeData.attributes).map((labelKey, i) => (\n                <li key={`${labelKey}-${i}`}>\n                  {labelKey}: {nodeData.attributes[labelKey]}\n                </li>\n              ))}\n          </ul>\n          {nodeData.children && (\n            <button style={{ textAlign: 'center' }} onClick={triggerNodeToggle}>\n              {nodeData.__rd3t.collapsed ? '⬅️ ➡️ Expand' : '➡️ ⬅️ Collapse'}\n            </button>\n          )}\n        </div>\n      </foreignObject>\n    </React.Fragment>\n  );\n};\n\nexport default MixedNodeElement;\n","import React from 'react';\n\nconst textLayout = {\n  vertical: {\n    title: {\n      textAnchor: 'start',\n      x: 40,\n    },\n    attributes: {},\n    attribute: {\n      x: 40,\n      dy: '1.2em',\n    },\n  },\n  horizontal: {\n    title: {\n      textAnchor: 'start',\n      y: 40,\n    },\n    attributes: {\n      x: 0,\n      y: 40,\n    },\n    attribute: {\n      x: 0,\n      dy: '1.2em',\n    },\n  },\n};\n\nconst PureSvgNodeElement = ({ nodeDatum, orientation, toggleNode, onNodeClick }) => {\n  return (\n    <>\n      <circle r={20} onClick={toggleNode}></circle>\n      <g className=\"rd3t-label\">\n        <text\n          className=\"rd3t-label__title\"\n          {...textLayout[orientation].title}\n          onClick={onNodeClick}\n        >\n          {nodeDatum.name}\n        </text>\n        <text className=\"rd3t-label__attributes\" {...textLayout[orientation].attributes}>\n          {nodeDatum.attributes &&\n            Object.entries(nodeDatum.attributes).map(([labelKey, labelValue], i) => (\n              <tspan key={`${labelKey}-${i}`} {...textLayout[orientation].attribute}>\n                {labelKey}: {labelValue}\n              </tspan>\n            ))}\n        </text>\n      </g>\n    </>\n  );\n};\n\nexport default PureSvgNodeElement;\n","const idRegex = /1(\\.[1-9]+)*$/;\nconst parentIdRegex = /(1(\\.[1-9]+)*)\\.[1-9]+$/;\n\nfunction extract(ancestryEntry, entryData, key) {\n  if (!(key in entryData))\n    throw Error(`Entry:\n\n${ancestryEntry}\n\nmust have a '${key}' defined`);\n  const val = entryData[key];\n  delete entryData[key];\n  return val;\n}\n\nfunction parseAncestryEntry(ancestryEntry) {\n  if (ancestryEntry.trim().length === 0)\n    return null;\n\n  const entryData = {};\n  const lines = ancestryEntry.trim().split('\\n');\n\n  if (lines.length === 0)\n    return null;\n\n  lines\n    .map(line => line.split('='))\n    .forEach(def => {\n      if (def.length !== 2)\n        throw Error(`Malformed line \"${def.join('=')}\" in entry:\n\n${ancestryEntry}\n\nThe expected format is: property=value`);\n      if (def[0] in entryData)\n        throw Error(`Entry:\n\n${ancestryEntry}\n\nhas a duplicate property ${def[0]}'`);\n      entryData[def[0]] = (def[1] || '').trim();\n    });\n  const id = extract(ancestryEntry, entryData, 'id');\n  const name = extract(ancestryEntry, entryData, 'name');\n  if (!id.match(idRegex))\n    throw Error(`id must match pattern \"${idRegex}\" (eg: 1.2.1), but instead ${id} was found`);\n  const matches = id.match(parentIdRegex);\n  const parentId = (matches && matches.length > 1) ? matches[1] : null;\n  return {id, parentId, data: {name, attributes: entryData, children: []}};\n}\n\nexport function parseAncestryNotation(text) {\n  const nodeMap = {};\n  text.replace('\\r', '')\n    .split('\\n\\n')\n    .map(parseAncestryEntry)\n    .filter(entry => entry != null)\n    .forEach(entry => {\n      if (entry.id in nodeMap)\n        throw Error(`Duplicate id found: ${entry.id}`);\n      nodeMap[entry.id] = entry;\n    });\n  let tree = null;\n  Object.values(nodeMap)\n    .forEach(entry => {\n      if (entry.parentId) {\n        if (!(entry.parentId in nodeMap))\n          throw Error(`Found an entry with 'id=${entry.id}' but no parent exists with 'id=${entry.parentId}'`);\n        nodeMap[entry.parentId].data.children.push(entry.data);\n      } else {\n        if (entry.id !== '1')\n          throw Error(`The original ancestor must have an id=1 .\n          All other entries must be descendents (eg. 1.1, 1.2, 1.2.1, etc).\n          But an entry was found with 'id=${entry.id}'`);\n        tree = entry.data;\n      }\n    });\n  if (tree === null)\n    throw Error('At least one entry must exist with id=1 to represent the original ancestor.');\n  return tree;\n}\n\nfunction printAncestryEntry(entry) {\n  return `id=${entry.id}\nname=${entry.node.name}\n${entry.node.attributes ? Object.entries(entry.node.attributes)\n    .map(attr => attr.join('=') + '\\n')\n    .join('') : ''}`;\n}\n\nfunction* bfs(tree) {\n  const frontier = [{id: '1', node: tree}];\n  while (frontier.length > 0) {\n    const entry = frontier.shift();\n    yield entry;\n    if (entry.node.children) {\n      entry.node.children.forEach((child, childI) => {\n        frontier.push({id: `${entry.id}.${childI + 1}`, node: child});\n      });\n    }\n  }\n}\n\nexport function printAncestryNotation(tree) {\n  return [...bfs(tree)].map(printAncestryEntry).join('\\n');\n}\n","import React, {Component} from 'react';\nimport Tree from 'react-d3-tree';\nimport {version} from '../../package.json';\nimport Switch from './Switch';\nimport MixedNodeElement from './MixedNodeElement';\nimport PureSvgNodeElement from './PureSvgNodeElement';\nimport '../App.css';\n// Data data\nimport data from './../data/data.json';\nimport {parseAncestryNotation, printAncestryNotation} from '../utils/TreeConverter';\n\nconst orgChartJson = data.tree;\n\nconst customNodeFnMapping = {\n  svg: {\n    description: 'Default - Pure SVG node & label (IE11 compatible)',\n    fn: (rd3tProps, appState) => (\n      <PureSvgNodeElement\n        nodeDatum={rd3tProps.nodeDatum}\n        toggleNode={rd3tProps.toggleNode}\n        orientation={appState.orientation}\n      />\n    ),\n  },\n  mixed: {\n    description: 'MixedNodeElement - SVG `circle` + `foreignObject` label',\n    fn: ({nodeDatum, toggleNode}, appState) => (\n      <MixedNodeElement\n        nodeData={nodeDatum}\n        triggerNodeToggle={toggleNode}\n        foreignObjectProps={{\n          width: appState.nodeSize.x,\n          height: appState.nodeSize.y,\n          x: -50,\n          y: 50,\n        }}\n      />\n    ),\n  },\n};\n\nconst countNodes = (count = 0, n) => {\n  // Count the current node\n  count += 1;\n\n  // Base case: reached a leaf node.\n  if (!n.children) {\n    return count;\n  }\n\n  // Keep traversing children while updating `count` until we reach the base case.\n  return n.children.reduce((sum, child) => countNodes(sum, child), count);\n};\n\nfunction getEditDataFileLink() {\n  const matches = window.location.href.match(/https:\\/\\/(.*)\\.github.io\\/(.*)\\//);\n  if (!matches || matches.length < 3) {\n    return 'https://github.com/reubenjohn/family-tree-editor/edit/master/src/data/data.json';\n  }\n  const owner = matches[1];\n  const projectPath = matches[2];\n  return `https://github.com/${owner}/${projectPath}/edit/master/src/data/data.json`;\n}\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: orgChartJson,\n      proposedAncestry: printAncestryNotation(orgChartJson),\n      totalNodeCount: countNodes(0, Array.isArray(orgChartJson) ? orgChartJson[0] : orgChartJson),\n      title: 'My Family Tree',\n      orientation: 'vertical',\n      translateX: 200,\n      translateY: 300,\n      pathFunc: 'diagonal',\n      collapsible: true,\n      shouldCollapseNeighborNodes: false,\n      initialDepth: 1,\n      depthFactor: null,\n      zoomable: true,\n      zoom: 1,\n      scaleExtent: {min: 0.1, max: 1},\n      separation: {siblings: 2, nonSiblings: 2},\n      nodeSize: {x: 200, y: 200},\n      enableLegacyTransitions: false,\n      transitionDuration: 500,\n      renderCustomNodeElement: 'svg',\n      styles: {\n        nodes: {\n          node: {\n            circle: {\n              fill: '#52e2c5',\n            },\n            attributes: {\n              stroke: '#000',\n            },\n          },\n          leafNode: {\n            circle: {\n              fill: 'transparent',\n            },\n            attributes: {\n              stroke: '#000',\n            },\n          },\n        },\n      },\n    };\n\n    this.setTitle = this.setTitle.bind(this);\n    this.setOrientation = this.setOrientation.bind(this);\n    this.setPathFunc = this.setPathFunc.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFloatChange = this.handleFloatChange.bind(this);\n    this.toggleCollapsible = this.toggleCollapsible.bind(this);\n    this.toggleZoomable = this.toggleZoomable.bind(this);\n    this.setScaleExtent = this.setScaleExtent.bind(this);\n    this.setSeparation = this.setSeparation.bind(this);\n    this.setNodeSize = this.setNodeSize.bind(this);\n  }\n\n  setTitle(title) {\n    this.setState({title});\n  }\n\n  setOrientation(orientation) {\n    this.setState({orientation});\n  }\n\n  setPathFunc(pathFunc) {\n    this.setState({pathFunc});\n  }\n\n  handleChange(evt) {\n    const target = evt.target;\n    const parsedIntValue = parseInt(target.value, 10);\n    if (target.value === '') {\n      this.setState({\n        [target.name]: undefined,\n      });\n    } else if (!isNaN(parsedIntValue)) {\n      this.setState({\n        [target.name]: parsedIntValue,\n      });\n    }\n  }\n\n  handleFloatChange(evt) {\n    const target = evt.target;\n    const parsedFloatValue = parseFloat(target.value);\n    if (target.value === '') {\n      this.setState({\n        [target.name]: undefined,\n      });\n    } else if (!isNaN(parsedFloatValue)) {\n      this.setState({\n        [target.name]: parsedFloatValue,\n      });\n    }\n  }\n\n  handleCustomNodeFnChange = evt => {\n    const customNodeKey = evt.target.value;\n\n    this.setState({renderCustomNodeElement: customNodeKey});\n  };\n\n  toggleCollapsible() {\n    this.setState(prevState => ({collapsible: !prevState.collapsible}));\n  }\n\n  toggleCollapseNeighborNodes = () => {\n    this.setState(prevState => ({\n      shouldCollapseNeighborNodes: !prevState.shouldCollapseNeighborNodes,\n    }));\n  };\n\n  toggleZoomable() {\n    this.setState(prevState => ({zoomable: !prevState.zoomable}));\n  }\n\n  setScaleExtent(scaleExtent) {\n    this.setState({scaleExtent});\n  }\n\n  setSeparation(separation) {\n    if (!isNaN(separation.siblings) && !isNaN(separation.nonSiblings)) {\n      this.setState({separation});\n    }\n  }\n\n  setNodeSize(nodeSize) {\n    if (!isNaN(nodeSize.x) && !isNaN(nodeSize.y)) {\n      this.setState({nodeSize});\n    }\n  }\n\n  componentDidMount() {\n    const dimensions = this.treeContainer.getBoundingClientRect();\n    this.setState({\n      translateX: dimensions.width / 2.5,\n      translateY: dimensions.height / 2,\n    });\n  }\n\n  generateConfigs = () => ({\n    title: this.state.title,\n    orientation: this.state.orientation,\n    translate: {x: this.state.translateX, y: this.state.translateY},\n    pathFunc: this.state.pathFunc,\n    renderCustomNodeElement: this.state.renderCustomNodeElement,\n    collapsible: this.state.collapsible,\n    initialDepth: this.state.initialDepth,\n    zoomable: this.state.zoomable,\n    zoom: this.state.zoom,\n    scaleExtent: this.state.scaleExtent,\n    nodeSize: this.state.nodeSize,\n    separation: this.state.separation,\n    enableLegacyTransitions: this.state.enableLegacyTransitions,\n    transitionDuration: this.state.transitionDuration,\n    depthFactor: this.state.depthFactor,\n    styles: this.state.styles,\n    shouldCollapseNeighborNodes: this.state.shouldCollapseNeighborNodes,\n  });\n\n  generateDataAndConfigurations = () => ({\n    configurations: this.generateConfigs(),\n    tree: this.state.data,\n  });\n\n  tryUpdateAncestry(notation) {\n    this.setState({proposedAncestry: notation});\n    try {\n      this.setState({\n        data: parseAncestryNotation(notation),\n        totalNodeCount: countNodes(0, Array.isArray(data) ? data[0] : data),\n        ancestryParsingError: null\n      });\n    } catch (e) {\n      this.setState({ancestryParsingError: e.message});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"demo-container\">\n          <div className=\"column-left\">\n            <div className=\"controls-container\">\n              <div className=\"prop-container\">\n                <h2 className=\"title\">Family Tree Editor</h2>\n                <h3 className=\"title\">v{version}</h3>\n\n                <div className=\"prop-container\">\n                  <h3 className=\"prop\">Save</h3>\n                  Save your changes to avoid loosing your data.<br/>\n                  <h5>Steps to save your changes</h5>\n                  <ol>\n                    <li>Create a copy of this website (you only need to do this once)</li>\n                    <li>Copy all your changes using the 'Copy Tree & Configurations' button below</li>\n                    <li>Open your <a\n                      href={getEditDataFileLink()}\n                      target='_blank'\n                      rel='noopener noreferrer'>data file</a> and\n                      paste your changes there.<br/>\n                      Finally, hit the 'Commit changes' button at the bottom.\n                    </li>\n                    <li>If all goes well, your changes should reflect in a few minutes once you refresh the page.</li>\n                  </ol>\n                  <textarea style={{width: '100%'}}\n                            value={JSON.stringify(this.generateDataAndConfigurations(), null, 2)}\n                            disabled={true}/>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-block\"\n                    onClick={() => navigator.clipboard.writeText(JSON.stringify(this.generateDataAndConfigurations(), null, 2))}\n                  >\n                    {'Copy Tree & Configurations'}\n                  </button>\n                </div>\n\n                <h4 className=\"prop\">Ancestry</h4>\n                <div style={{marginBottom: '5px'}}>\n                  <textarea style={{width: '100%', color: this.state.ancestryParsingError ? 'red' : 'black'}}\n                            rows={12}\n                            value={this.state.proposedAncestry}\n                            onChange={(event) => this.tryUpdateAncestry(event.target.value)}/>\n                  {this.state.ancestryParsingError &&\n                  <pre style={{color: 'red'}}>{this.state.ancestryParsingError}</pre>}\n                </div>\n              </div>\n\n              <div className=\"prop-container\">\n                <h3 className=\"prop\">Configurations</h3>\n                <h4 className=\"prop\">Title</h4>\n                <input\n                  type=\"text\"\n                  value={this.state.title}\n                  onChange={(event) => this.setTitle(event.target.value)}\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <h4 className=\"prop\">Orientation</h4>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-controls btn-block\"\n                  onClick={() => this.setOrientation('horizontal')}\n                >\n                  {'Horizontal'}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-controls btn-block\"\n                  onClick={() => this.setOrientation('vertical')}\n                >\n                  {'Vertical'}\n                </button>\n              </div>\n\n              <div className=\"prop-container\">\n                <h4 className=\"prop\">Path Function</h4>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-controls btn-block\"\n                  onClick={() => this.setPathFunc('diagonal')}\n                >\n                  {'Diagonal'}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-controls btn-block\"\n                  onClick={() => this.setPathFunc('elbow')}\n                >\n                  {'Elbow'}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-controls btn-block\"\n                  onClick={() => this.setPathFunc('straight')}\n                >\n                  {'Straight'}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-controls btn-block\"\n                  onClick={() => this.setPathFunc('step')}\n                >\n                  {'Step'}\n                </button>\n              </div>\n\n              <div className=\"prop-container\">\n                <label className=\"prop\" htmlFor=\"customNodeElement\">\n                  Custom Node Element\n                </label>\n                <select className=\"form-control\" onChange={this.handleCustomNodeFnChange}>\n                  {Object.entries(customNodeFnMapping).map(([key, {description}]) => (\n                    <option key={key} value={key}>\n                      {description}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"prop-container\">\n                <h4 className=\"prop\">Collapsible</h4>\n                <Switch\n                  name=\"collapsibleBtn\"\n                  checked={this.state.collapsible}\n                  onChange={this.toggleCollapsible}\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <h4 className=\"prop\">Collapse neighbor nodes</h4>\n                <Switch\n                  name=\"collapseNeighborsBtn\"\n                  checked={this.state.shouldCollapseNeighborNodes}\n                  onChange={this.toggleCollapseNeighborNodes}\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <h4 className=\"prop\">Enable Legacy Transitions</h4>\n                <Switch\n                  name=\"enableLegacyTransitionsBtn\"\n                  checked={this.state.enableLegacyTransitions}\n                  onChange={() =>\n                    this.setState(prevState => ({\n                      enableLegacyTransitions: !prevState.enableLegacyTransitions,\n                    }))\n                  }\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <div>\n                  <label className=\"prop\" htmlFor=\"translateX\">\n                    Translate X\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    name=\"translateX\"\n                    type=\"number\"\n                    value={this.state.translateX}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div>\n                  <label className=\"prop\" htmlFor=\"translateY\">\n                    Translate Y\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    name=\"translateY\"\n                    type=\"number\"\n                    value={this.state.translateY}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"prop-container\">\n                <label className=\"prop\" htmlFor=\"initialDepth\">\n                  Initial Depth\n                </label>\n                <input\n                  className=\"form-control\"\n                  style={{color: 'grey'}}\n                  name=\"initialDepth\"\n                  type=\"text\"\n                  value={this.state.initialDepth}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <label className=\"prop\" htmlFor=\"depthFactor\">\n                  Depth Factor\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"depthFactor\"\n                  type=\"number\"\n                  defaultValue={this.state.depthFactor}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              {/* <div className=\"prop-container prop\">{`Zoomable: ${this.state.zoomable}`}</div> */}\n\n              <div className=\"prop-container\">\n                <label className=\"prop\" htmlFor=\"zoom\">\n                  Zoom\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"zoom\"\n                  type=\"number\"\n                  defaultValue={this.state.zoom}\n                  onChange={this.handleFloatChange}\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <span className=\"prop prop-large\">Scale Extent</span>\n                <label className=\"sub-prop\" htmlFor=\"scaleExtentMin\">\n                  Min\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"scaleExtentMin\"\n                  type=\"number\"\n                  defaultValue={this.state.scaleExtent.min}\n                  onChange={evt =>\n                    this.setScaleExtent({\n                      min: parseFloat(evt.target.value),\n                      max: this.state.scaleExtent.max,\n                    })\n                  }\n                />\n                <label className=\"sub-prop\" htmlFor=\"scaleExtentMax\">\n                  Max\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"scaleExtentMax\"\n                  type=\"number\"\n                  defaultValue={this.state.scaleExtent.max}\n                  onChange={evt =>\n                    this.setScaleExtent({\n                      min: this.state.scaleExtent.min,\n                      max: parseFloat(evt.target.value),\n                    })\n                  }\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <span className=\"prop prop-large\">Node separation</span>\n                <label className=\"sub-prop\" htmlFor=\"separationSiblings\">\n                  Siblings\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"separationSiblings\"\n                  type=\"number\"\n                  defaultValue={this.state.separation.siblings}\n                  onChange={evt =>\n                    this.setSeparation({\n                      siblings: parseFloat(evt.target.value),\n                      nonSiblings: this.state.separation.nonSiblings,\n                    })\n                  }\n                />\n                <label className=\"sub-prop\" htmlFor=\"separationNonSiblings\">\n                  Non-Siblings\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"separationNonSiblings\"\n                  type=\"number\"\n                  defaultValue={this.state.separation.nonSiblings}\n                  onChange={evt =>\n                    this.setSeparation({\n                      siblings: this.state.separation.siblings,\n                      nonSiblings: parseFloat(evt.target.value),\n                    })\n                  }\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <span className=\"prop prop-large\">Node size</span>\n                <label className=\"sub-prop\" htmlFor=\"nodeSizeX\">\n                  X\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"nodeSizeX\"\n                  type=\"number\"\n                  defaultValue={this.state.nodeSize.x}\n                  onChange={evt =>\n                    this.setNodeSize({x: parseFloat(evt.target.value), y: this.state.nodeSize.y})\n                  }\n                />\n                <label className=\"sub-prop\" htmlFor=\"nodeSizeY\">\n                  Y\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"nodeSizeY\"\n                  type=\"number\"\n                  defaultValue={this.state.nodeSize.y}\n                  onChange={evt =>\n                    this.setNodeSize({x: this.state.nodeSize.x, y: parseFloat(evt.target.value)})\n                  }\n                />\n              </div>\n\n              <div className=\"prop-container\">\n                <label className=\"prop\" htmlFor=\"transitionDuration\">\n                  Transition Duration\n                </label>\n                <input\n                  className=\"form-control\"\n                  name=\"transitionDuration\"\n                  type=\"number\"\n                  value={this.state.transitionDuration}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"column-right\">\n            <div className=\"tree-stats-container\">\n              Total nodes in tree: {this.state.totalNodeCount}\n            </div>\n            <div ref={tc => (this.treeContainer = tc)} className=\"tree-container\">\n              <Tree\n                data={this.state.data}\n                renderCustomNodeElement={\n                  this.state.renderCustomNodeElement\n                    ? rd3tProps => customNodeFnMapping[this.state.renderCustomNodeElement].fn(rd3tProps, this.state)\n                    : undefined\n                }\n                rootNodeClassName=\"demo-node\"\n                branchNodeClassName=\"demo-node\"\n                orientation={this.state.orientation}\n                translate={{x: this.state.translateX, y: this.state.translateY}}\n                pathFunc={this.state.pathFunc}\n                collapsible={this.state.collapsible}\n                initialDepth={this.state.initialDepth}\n                zoomable={this.state.zoomable}\n                zoom={this.state.zoom}\n                scaleExtent={this.state.scaleExtent}\n                nodeSize={this.state.nodeSize}\n                separation={this.state.separation}\n                enableLegacyTransitions={this.state.enableLegacyTransitions}\n                transitionDuration={this.state.transitionDuration}\n                depthFactor={this.state.depthFactor}\n                styles={this.state.styles}\n                shouldCollapseNeighborNodes={this.state.shouldCollapseNeighborNodes}\n                // onUpdate={(...args) => {console.log(args)}}\n                onNodeClick={(...args) => {\n                  console.log('onNodeClick');\n                  console.log(args);\n                }}\n                onNodeMouseOver={(...args) => {\n                  console.log('onNodeMouseOver', args);\n                }}\n                onNodeMouseOut={(...args) => {\n                  console.log('onNodeMouseOut', args);\n                }}\n                onLinkClick={(...args) => {\n                  console.log(args);\n                }}\n                onLinkMouseOver={(...args) => {\n                  console.log('onLinkMouseOver', args);\n                }}\n                onLinkMouseOut={(...args) => {\n                  console.log('onLinkMouseOut', args);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n","import React, {Component} from 'react';\nimport Tree from 'react-d3-tree';\nimport MixedNodeElement from './MixedNodeElement';\nimport PureSvgNodeElement from './PureSvgNodeElement';\nimport '../App.css';\n\nconst customNodeFnMapping = {\n  svg: {\n    description: 'Default - Pure SVG node & label (IE11 compatible)',\n    fn: (rd3tProps, configs) => (\n      <PureSvgNodeElement\n        nodeDatum={rd3tProps.nodeDatum}\n        toggleNode={rd3tProps.toggleNode}\n        orientation={configs.orientation}\n      />\n    ),\n  },\n  mixed: {\n    description: 'MixedNodeElement - SVG `circle` + `foreignObject` label',\n    fn: ({nodeDatum, toggleNode, configs}) => (\n      <MixedNodeElement\n        nodeData={nodeDatum}\n        triggerNodeToggle={toggleNode}\n        foreignObjectProps={{\n          width: configs.nodeSize.x,\n          height: configs.nodeSize.y,\n          x: -50,\n          y: 50,\n        }}\n      />\n    ),\n  },\n};\n\nclass FamilyTree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      translateX: 128,\n      translateY: 128,\n    };\n  }\n\n  componentDidMount() {\n    const dimensions = this.treeContainer.getBoundingClientRect();\n    this.setState({\n      translateX: dimensions.width / 2.5,\n      translateY: dimensions.height / 2,\n    });\n  }\n\n  render() {\n    const {data, configurations} = this.props;\n    return (\n      <div className=\"App\">\n        <div className=\"demo-container\">\n          <div className=\"column-right\">\n            <div className=\"tree-stats-container\">\n              <h2>{configurations.title}</h2>\n            </div>\n            <div ref={tc => (this.treeContainer = tc)} className=\"tree-container\">\n              <Tree\n                data={data}\n                renderCustomNodeElement={\n                  configurations.renderCustomNodeElement\n                    ? rd3tProps => customNodeFnMapping[configurations.renderCustomNodeElement].fn(rd3tProps, configurations)\n                    : undefined\n                }\n                rootNodeClassName=\"demo-node\"\n                branchNodeClassName=\"demo-node\"\n                orientation={configurations.orientation}\n                translate={{x: this.state.translateX, y: this.state.translateY}}\n                pathFunc={configurations.pathFunc}\n                collapsible={configurations.collapsible}\n                initialDepth={configurations.initialDepth}\n                zoomable={configurations.zoomable}\n                zoom={configurations.zoom}\n                scaleExtent={configurations.scaleExtent}\n                nodeSize={configurations.nodeSize}\n                separation={configurations.separation}\n                enableLegacyTransitions={configurations.enableLegacyTransitions}\n                transitionDuration={configurations.transitionDuration}\n                depthFactor={configurations.depthFactor}\n                styles={configurations.styles}\n                shouldCollapseNeighborNodes={configurations.shouldCollapseNeighborNodes}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FamilyTree;\n","import React, {Component} from 'react';\nimport '../App.css';\nimport FamilyTree from \"./FamilyTree\";\n// Data data\nimport data from './../data/data.json';\n\nclass Viewer extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"demo-container\">\n          <div className=\"column-right\">\n            <FamilyTree data={data.tree} configurations={data.configurations}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Viewer;\n","import React, {Component} from 'react';\nimport Editor from \"./components/Editor\";\nimport Viewer from \"./components/Viewer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"demo-container\">\n          <button title={'Edit'}\n                  onClick={() => this.setState({...this.state, editMode: !this.state.editMode})}/>\n          {this.state.editMode ? <Editor/> : <Viewer/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}